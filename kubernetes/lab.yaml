apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: api
  namespace: default
spec:
  selector:
    matchLabels:
      app: api
  replicas: 2
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: nginx
          image: nginx:1.8
          ports:
            - containerPort: 80
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: connection
  namespace: default
spec:
  selector:
    matchLabels:
      app: connection
  replicas: 2
  template:
    metadata:
      labels:
        app: connection
    spec:
      containers:
        - name: nginx
          image: nginx:1.8
          ports:
            - containerPort: 80
      tolerations:
        - key: "app"
          operator: "Equal"
          value: "connection"
          effect: "NoSchedule"
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: worker
  namespace: default
spec:
  selector:
    matchLabels:
      app: worker
  replicas: 2
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
        - name: busybox-curl
          image: odise/busybox-curl
          command:
            - sleep
            - "3600"
          imagePullPolicy: IfNotPresent
      tolerations:
        - key: "app"
          operator: "Equal"
          value: "syrup"
          effect: "NoSchedule"
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: api
  name: api
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: LoadBalancer
  selector:
    app: api
  ports:
    - port: 443
      targetPort: 80
      protocol: TCP
      name: https
    - port: 80
      targetPort: 80
      protocol: TCP
      name: http
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: docker
  namespace: default
spec:
  selector:
    matchLabels:
      app: docker
  replicas: 2
  template:
    metadata:
      labels:
        app: docker
    spec:
      containers:
        - name: docker
          image: docker
          command:
            - sleep
            - "3600"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /var/run/docker.sock
              name: docker-socket-volume
          securityContext:
            privileged: true
      tolerations:
        - key: "app"
          operator: "Equal"
          value: "docker-runner"
          effect: "NoSchedule"
      volumes:
        - name: docker-socket-volume
          hostPath:
            path: /var/run/docker.sock
            type: File
